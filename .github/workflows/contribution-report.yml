name: Generate Contribution Report

on:
  schedule:
    - cron: '0 15 * * 5'  # Run every Friday at 3pm EST
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate_report:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests jq

      # Generate the report
      - name: Generate contribution report
        run: |
          # Set up variables
          today=$(date +"%Y-%m-%d")
          report_file="reports/contribution_report_${today}.md"
          mkdir -p reports  # Ensure reports directory exists

          echo "# 📝 GitHub Contributions Report - ${today}" > $report_file
          echo "" >> $report_file
          echo "## 📊 Weekly Summary" >> $report_file
          echo "| Repository | 🐞 Issues Opened | ✍️ PRs Opened | 👀 PR Reviews |" >> $report_file
          echo "|------------|-----------------|-------------|-----------|" >> $report_file

          # GitHub Organizations
          orgs=("rstudio" "posit-dev")

          for org in "${orgs[@]}"; do
            echo "Fetching repositories for $org..."
            
            # Fetch repositories
            REPOS=$(curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
              "https://api.github.com/orgs/$org/repos?per_page=100" | jq -r '.[].full_name')

            # Debugging output
            echo "Repositories retrieved:"
            echo "$REPOS"

            # Loop through repositories
            for repo in $REPOS; do
              echo "Processing repository: $repo"

              # Fetch issues, PRs, and reviews
              issue_count=$(curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
                "https://api.github.com/repos/$repo/issues?state=open" | jq '. | length' || echo 0)

              pr_count=$(curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
                "https://api.github.com/repos/$repo/pulls?state=open" | jq '. | length' || echo 0)

              review_count=$(curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
                "https://api.github.com/repos/$repo/pulls?state=open" | jq '[.[].url] | length' || echo 0)

              # Add to summary table
              echo "| [${repo}](https://github.com/${repo}) | ${issue_count} | ${pr_count} | ${review_count} |" >> $report_file

              # Detailed breakdown
              echo "### 📌 Repository: [${repo}](https://github.com/${repo})" >> $report_file
              echo "" >> $report_file
              echo "#### 🐞 Issues Opened (${issue_count}):" >> $report_file
              if [ "$issue_count" -gt 0 ]; then
                curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
                  "https://api.github.com/repos/$repo/issues?state=open" | jq -r '.[] | "- [" + .title + "](" + .html_url + ")"' >> $report_file
              else
                echo "_No new issues_" >> $report_file
              fi
              echo "" >> $report_file

              echo "#### ✍️ Pull Requests Opened (${pr_count}):" >> $report_file
              if [ "$pr_count" -gt 0 ]; then
                curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
                  "https://api.github.com/repos/$repo/pulls?state=open" | jq -r '.[] | "- [" + .title + "](" + .html_url + ")"' >> $report_file
              else
                echo "_No new PRs_" >> $report_file
              fi
              echo "" >> $report_file

              echo "#### 👀 PR Reviews (${review_count}):" >> $report_file
              if [ "$review_count" -gt 0 ]; then
                curl -s -H "Authorization: token ${{ secrets.WEEKLY_TOKEN }}" \
                  "https://api.github.com/repos/$repo/pulls?state=open" | jq -r '.[] | "- [Reviewed PR](" + .html_url + ")"' >> $report_file
              else
                echo "_No new reviews_" >> $report_file
              fi
              echo "---" >> $report_file
            done
          done

      # Commit and push the report
      - name: Commit and push report
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add reports/*
          git commit -m "Update contribution report for ${today}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.WEEKLY_TOKEN }}

name: Generate GitHub Contribution Report

on:
  workflow_dispatch:
  schedule:
    - cron: '0 19 * * 5' # 3pm EST Fridays

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install jq and gh
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Authenticate token
        run: |
          echo "🔐 Checking token authentication..."
          user=$(curl -s -H "Authorization: token $WEEKLY_TOKEN" https://api.github.com/user | jq -r '.login')
          if [[ "$user" != "AshleyHenry15" ]]; then
            echo "::error ::Token authentication failed. Expected 'AshleyHenry15', got '$user'"
            exit 1
          fi
          echo "✅ Authenticated as $user"
        env:
          WEEKLY_TOKEN: ${{ secrets.WEEKLY_TOKEN }}

      - name: Generate GitHub contribution report
        run: |
          mkdir -p reports
          REPORT_FILE="reports/contribution-report.md"
          echo "# 🧾 Weekly GitHub Contributions Report" > "$REPORT_FILE"
          echo "" >> "$REPORT_FILE"
          echo "_Generated on $(date)_" >> "$REPORT_FILE"
          echo "" >> "$REPORT_FILE"

          START_DATE=$(date -d "7 days ago" +"%Y-%m-%dT%H:%M:%SZ")
          END_DATE=$(date +"%Y-%m-%dT%H:%M:%SZ")

          declare -a ORGS=("rstudio" "posit-dev")
          declare -A contributions

          for ORG in "${ORGS[@]}"; do
            echo "📦 Fetching repos for org: $ORG"
            REPOS=$(curl -s -H "Authorization: token $WEEKLY_TOKEN" "https://api.github.com/orgs/$ORG/repos?per_page=100" | jq -r '.[]?.full_name')

            for REPO in $REPOS; do
              echo "📁 Analyzing repo: $REPO"

              # Pull Requests
              PRs=$(curl -s -H "Authorization: token $WEEKLY_TOKEN" \
                "https://api.github.com/repos/$REPO/pulls?state=all&per_page=100" | \
                jq -r --arg user "AshleyHenry15" --arg start "$START_DATE" --arg end "$END_DATE" \
                '.[] | select(.user.login == $user and .created_at >= $start and .created_at <= $end) | "- \(.title) ([#\(.number)](\(.html_url)))"')

              # Issues
              ISSUES=$(curl -s -H "Authorization: token $WEEKLY_TOKEN" \
                "https://api.github.com/repos/$REPO/issues?state=all&per_page=100" | \
                jq -r --arg user "AshleyHenry15" --arg start "$START_DATE" --arg end "$END_DATE" \
                '.[] | select(.pull_request == null and .user.login == $user and .created_at >= $start and .created_at <= $end) | "- \(.title) ([#\(.number)](\(.html_url)))"')

              # Reviews
              REVIEWS=$(curl -s -H "Authorization: token $WEEKLY_TOKEN" \
                "https://api.github.com/repos/$REPO/pulls?state=all&per_page=100" | \
                jq -r '.[] | .number' | while read pr; do
                  curl -s -H "Authorization: token $WEEKLY_TOKEN" \
                    "https://api.github.com/repos/$REPO/pulls/$pr/reviews" | \
                    jq -r --arg user "AshleyHenry15" --arg start "$START_DATE" --arg end "$END_DATE" \
                    '.[] | select(.user.login == $user and .submitted_at >= $start and .submitted_at <= $end) | "- PR #'"$pr"' review ([link](\(.html_url)))"'
                done)

              # Commits
              COMMITS=$(curl -s -H "Authorization: token $WEEKLY_TOKEN" \
                "https://api.github.com/repos/$REPO/commits?author=AshleyHenry15&since=$START_DATE&until=$END_DATE" | \
                jq -r '.[] | "- \(.commit.message | split("\n")[0]) ([link](\(.html_url)))"')

              if [[ -n "$PRs$ISSUES$REVIEWS$COMMITS" ]]; then
                echo "## $REPO" >> "$REPORT_FILE"

                [[ -n "$PRs" ]] && echo -e "🔃 **Pull Requests**\n$PRs\n" >> "$REPORT_FILE"
                [[ -n "$ISSUES" ]] && echo -e "🐞 **Issues**\n$ISSUES\n" >> "$REPORT_FILE"
                [[ -n "$REVIEWS" ]] && echo -e "👀 **Reviews**\n$REVIEWS\n" >> "$REPORT_FILE"
                [[ -n "$COMMITS" ]] && echo -e "📝 **Commits**\n$COMMITS\n" >> "$REPORT_FILE"

                echo "" >> "$REPORT_FILE"
              fi
            done
          done

          cat "$REPORT_FILE"

        env:
          WEEKLY_TOKEN: ${{ secrets.WEEKLY_TOKEN }}

      - name: Commit and push report
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add reports/contribution-report.md
          git commit -m "🧾 Add weekly contribution report [skip ci]" || echo "No changes to commit"
          git push

name: Generate Contribution Report

on:
  schedule:
    - cron: '0 15 * * 5'  # Every Friday at 3:00 PM EST
  workflow_dispatch: # Allows manual trigger

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Generate Contribution Report
        id: generate_report
        run: |
          #!/bin/bash

          # Set up variables
          today=$(date +'%Y-%m-%d')
          report_dir="reports"
          report_file="contributions-${today}.md"

          # Create reports directory if it doesn't exist
          mkdir -p $report_dir

          # Fetch list of repositories for the organizations
          repos=$(gh repo list rstudio --limit 100 --json name -q '.[].name')
          repos+=$(gh repo list posit-dev --limit 100 --json name -q '.[].name')

          # Start the report
          echo "## 📝 Weekly Contribution Report ($today)" > $report_dir/$report_file
          
          # Loop through each repo and get contributions data
          for repo in $repos; do
            echo "### 📌 Repository: [${repo}](https://github.com/rstudio/${repo})" >> $report_dir/$report_file
            echo "" >> $report_dir/$report_file

            # Fetch the contributions data for the repo
            issues_opened=$(gh issue list --repo rstudio/$repo --state open --json number --jq '. | length')
            prs_opened=$(gh pr list --repo rstudio/$repo --state open --json number --jq '. | length')
            pr_reviews=$(gh pr review --repo rstudio/$repo --json state --jq '. | length')

            # Output the formatted information
            echo "#### 🐞 Issues Opened ($issues_opened):" >> $report_dir/$report_file
            if [ $issues_opened -gt 0 ]; then
              gh issue list --repo rstudio/$repo --state open --json title,url --jq '.[] | "- [" + .title + "](" + .url + ")"' >> $report_dir/$report_file
            else
              echo "_No new issues_" >> $report_dir/$report_file
            fi
            echo "" >> $report_dir/$report_file

            echo "#### 🔀 Pull Requests Opened ($prs_opened):" >> $report_dir/$report_file
            if [ $prs_opened -gt 0 ]; then
              gh pr list --repo rstudio/$repo --state open --json title,url --jq '.[] | "- [" + .title + "](" + .url + ")"' >> $report_dir/$report_file
            else
              echo "_No new PRs_" >> $report_dir/$report_file
            fi
            echo "" >> $report_dir/$report_file

            echo "#### 📝 PR Reviews ($pr_reviews):" >> $report_dir/$report_file
            if [ $pr_reviews -gt 0 ]; then
              gh pr review --repo rstudio/$repo --json url --jq '.[] | "- [Reviewed PR](" + .url + ")"' >> $report_dir/$report_file
            else
              echo "_No new reviews_" >> $report_dir/$report_file
            fi
            echo "---" >> $report_dir/$report_file
          done

          # Commit the report to the repository
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add $report_dir/$report_file
          git commit -m "Update contribution report for $today"
          git push

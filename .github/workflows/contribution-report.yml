name: Generate GitHub Contribution Report
on:
  schedule:
    - cron: "0 0 * * 1"  # Runs every Monday
  workflow_dispatch:  # Allows manual trigger

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch GitHub Contributions (Last 7 Days)
        run: |
          USERNAME="AshleyHenry15"
          TOKEN="${{ secrets.WEEKLY }}"
          REPORT="## 📝 Weekly Contribution Report\n\n"
          
          ORGS=("rstudio" "posit-dev")  # List of organizations

          for ORG in "${ORGS[@]}"; do
            REPORT+="## 🔹 Organization: [$ORG](https://github.com/$ORG)\n\n"

            # Get all repos for the org
            REPOS=$(curl -s -H "Authorization: token $TOKEN" \
              "https://api.github.com/orgs/$ORG/repos?per_page=100" | jq -r '.[].full_name')

            for REPO in $REPOS; do
              REPORT+="### 📌 Repository: [$REPO](https://github.com/$REPO)\n\n"

              # Fetch User Events (Mirrors GitHub's Contribution Activity)
              EVENTS=$(curl -s -H "Authorization: token $TOKEN" \
                "https://api.github.com/users/$USERNAME/events?per_page=100")

              # Issues Opened
              ISSUES=$(echo "$EVENTS" | jq -r --arg REPO "$REPO" '[.[] | select(.type=="IssuesEvent" and .payload.action=="opened" and .repo.name==$REPO)] | map("- [\(.payload.issue.title)](\(.payload.issue.html_url)) (Opened: \(.created_at))") | join("\n")')
              REPORT+="#### 🐞 Issues Opened:\n${ISSUES:-_No new issues_\n}\n\n"

              # PRs Opened
              PRS=$(echo "$EVENTS" | jq -r --arg REPO "$REPO" '[.[] | select(.type=="PullRequestEvent" and .payload.action=="opened" and .repo.name==$REPO)] | map("- [\(.payload.pull_request.title)](\(.payload.pull_request.html_url)) (Opened: \(.created_at))") | join("\n")')
              REPORT+="#### 🔀 Pull Requests Opened:\n${PRS:-_No new PRs_\n}\n\n"

              # Commits Pushed
              COMMITS=$(echo "$EVENTS" | jq -r --arg REPO "$REPO" '[.[] | select(.type=="PushEvent" and .repo.name==$REPO)] | map("- [Commit \(.payload.commits | map(.sha[0:7]) | join(", "))](https://github.com/\(.repo.name)/commits)") | join("\n")')
              REPORT+="#### 💾 Commits Pushed:\n${COMMITS:-_No new commits_\n}\n\n"

              # PR Reviews
              REVIEWS=$(echo "$EVENTS" | jq -r --arg REPO "$REPO" '[.[] | select(.type=="PullRequestReviewEvent" and .repo.name==$REPO)] | map("- [Reviewed PR #\(.payload.pull_request.number)](\(.payload.review.html_url)) (Reviewed: \(.created_at))") | join("\n")')
              REPORT+="#### 📝 PR Reviews:\n${REVIEWS:-_No new reviews_\n}\n\n"

              REPORT+="---\n"
            done
          done

          echo -e "$REPORT" > report.md

      - name: Commit and push the report to GitHub
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git remote set-url origin https://x-access-token:${{ secrets.WEEKLY }}@github.com/AshleyHenry15/github-work.git
          git add report.md
          git commit -m "Update contribution report"
          git push origin main

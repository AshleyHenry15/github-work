name: Update README with new report links

on:
  workflow_run:
    workflows: 
      - "Generate GitHub Contributions Report"  # Make sure the name matches exactly
    types:
      - completed
  workflow_dispatch:  # Allows for manual triggering

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find all report files in the reports directory
        id: find_reports
        run: |
          # Get all the .md report files in the reports directory and sort by date
          report_files=$(find reports -type f -name "*.md" | sort -r)
          
          if [ -z "$report_files" ]; then
            echo "No report files found."
            exit 1  # Exit if no reports are found
          fi

          echo "REPORT_FILES=$report_files" >> $GITHUB_ENV

      - name: Update README with the list of report links
        run: |
          # Always update the README with the list of report links
          echo "## Contribution Reports" > README.md
          echo "Here is a list of all contribution reports:" >> README.md
          echo "" >> README.md

          # Loop through each report file, extract the date from the filename, and append it to the README
          for report in $REPORT_FILES; do
            # Extract the date from the filename (assuming the format is contributions-YYYY-MM-DD.md)
            report_date=$(basename "$report" | sed -E 's/contributions-([0-9]{4}-[0-9]{2}-[0-9]{2})\.md/\1/')
            echo "- [$report_date](./$report)" >> README.md
          done

          # Stage the README.md file for commit
          git add README.md

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          # Commit the changes to README.md
          git commit -m "Update README with new report links" || echo "No changes to commit"
          
          # Push the changes back to the main branch
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
